<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="pretty-atom-feed.xsl" type="text/xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <title>Matteo Girardi&#39;s website</title>
  <subtitle>Goosnargh!</subtitle>
  <link href="https://matteo-girardi.github.io/feed/feed.xml" rel="self" />
  <link href="https://matteo-girardi.github.io/" />
  <updated>2025-03-19T00:00:00Z</updated>
  <id>https://matteo-girardi.github.io/</id>
  <author>
    <name>Matteo Girardi</name>
  </author>
  <entry>
    <title>Convert Hex to Decimal in Bash</title>
    <link href="https://matteo-girardi.github.io/blog/2025-03-19-hex-to-decimal-bash/" />
    <updated>2025-03-19T00:00:00Z</updated>
    <id>https://matteo-girardi.github.io/blog/2025-03-19-hex-to-decimal-bash/</id>
    <content type="html">&lt;p&gt;For reasons I don&#39;t fully recall—probably because I was searching for colors to style my web site—I found myself frequently converting hex values to decimal. I quickly grew tired of searching online for a hex converter every time, so I wondered if there was a simpler way to do it directly in the terminal.&lt;/p&gt;
&lt;p&gt;Turns out, there is! You can use a simple one-liner in Bash:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;#FF &lt;span class=&quot;token variable&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;255&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Neat, simple, and no need to repeat the same search online!&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;but-how-does-it-work&quot;&gt;But how does it work?&lt;/h3&gt;
&lt;p&gt;Bash provides several ways to perform arithmetic operations, but for integer calculations, the recommended approach is to use its built-in &lt;a href=&quot;https://www.gnu.org/software/bash/manual/html_node/Arithmetic-Expansion.html&quot;&gt;Arithmetic Expansion&lt;/a&gt; feature. This allows you to evaluate expressions within double parentheses:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$((&lt;/span&gt; expression &lt;span class=&quot;token variable&quot;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default, Bash arithmetic works in base 10. However, you can specify a different base using the syntax &lt;em&gt;base#number&lt;/em&gt;. Regardless of the original base, arithmetic expansion always returns the decimal equivalent. This makes it easy to convert hexadecimal values:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;#&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;A &lt;span class=&quot;token variable&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;42&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This method is useful for quick conversions, but be cautious when using it for validation. For example:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token assign-left variable&quot;&gt;HEX&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;F+!P4_&#39;&lt;/span&gt;
$ &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;#$HEX &lt;span class=&quot;token variable&quot;&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This result is misleading because &lt;em&gt;F+!P4_&lt;/em&gt; is not a valid hexadecimal number. Thus, I wouldn’t rely on this method in a script if input validation is required.&lt;/p&gt;
&lt;p&gt;An alternative approach is to use &lt;code&gt;printf&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;%d&lt;span class=&quot;token entity&quot; title=&quot;&#92;n&quot;&gt;&#92;n&lt;/span&gt;&quot;&lt;/span&gt; 0x0F
&lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, it has similar issues:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token assign-left variable&quot;&gt;HEX&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;F+!P4_&#39;&lt;/span&gt;
$ &lt;span class=&quot;token builtin class-name&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;%d&lt;span class=&quot;token entity&quot; title=&quot;&#92;n&quot;&gt;&#92;n&lt;/span&gt;&quot;&lt;/span&gt; 0x&lt;span class=&quot;token variable&quot;&gt;$HEX&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So while these methods are handy for quick conversions, they shouldn&#39;t be trusted for strict hex validation. Use them wisely!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>My very first post</title>
    <link href="https://matteo-girardi.github.io/blog/2020-07-05-very-first-post/" />
    <updated>2020-07-05T00:00:00Z</updated>
    <id>https://matteo-girardi.github.io/blog/2020-07-05-very-first-post/</id>
    <content type="html">&lt;h1 id=&quot;goosnargh&quot;&gt;&lt;mark&gt;Goosnargh!&lt;/mark&gt;&lt;/h1&gt;
</content>
  </entry>
</feed>